<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wzt.mybatis.demo.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.wzt.mybatis.demo.model.User">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.wzt.mybatis.demo.model.UserWithBLOBs">
        <constructor>
            <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_password" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_email" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="user_info" jdbcType="LONGVARCHAR" javaType="java.lang.String"/>
            <arg column="head_img" jdbcType="LONGVARBINARY" javaType="_byte[]"/>
        </constructor>
    </resultMap>
    <resultMap id="ResultMapWithRoles" type="com.wzt.mybatis.demo.model.User" extends="BaseResultMap">
        <collection property="roleList" columnPrefix="role_"
                    resultMap="com.wzt.mybatis.demo.mapper.RoleMapper.BaseResultMap"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_name, user_password, user_email, create_time
    </sql>
    <sql id="Blob_Column_List">
        user_info, head_img
    </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultType="com.wzt.mybatis.demo.model.User">
        select
        <include refid="Base_Column_List"/>
        from sys_user
    </select>

    <select id="selectUserRoleAll" resultMap="ResultMapWithRoles">
        SELECT u.id,
               u.user_name,
               u.user_password,
               u.user_email,
               u.create_time,
               r.id          role_id,
               r.role_name   role_role_name,
               r.enabled     role_enabled,
               r.create_by   role_create_by,
               r.create_time role_create_time
        from sys_user u
                 inner join sys_user_role ur on u.id = ur.user_id
                 inner join sys_role r on r.id = ur.role_id
    </select>

    <select id="selectUserRolePrivilegeAll" resultMap="ResultMapWithRoles">
        SELECT u.id,
               u.user_name,
               u.user_password,
               u.user_email,
               u.create_time,
               p.id             role_privilege_id,
               p.privilege_name role_privilege_privilege_name,
               p.privilege_url  role_privilege_privilege_url,
               r.id             role_id,
               r.role_name      role_role_name,
               r.enabled        role_enabled,
               r.create_time    role_create_time,
               r.create_by      role_create_by
        FROM sys_user u
                 INNER JOIN sys_user_role ur ON u.id = ur.user_id
                 INNER JOIN sys_role r ON r.id = ur.role_id
                 INNER JOIN sys_role_privilege rp ON rp.role_id = r.id
                 INNER JOIN sys_privilege p ON p.id = rp.privilege_id;
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.wzt.mybatis.demo.model.UserWithBLOBs">
        insert into sys_user (id, user_name, user_password,
                              user_email, create_time, user_info,
                              head_img)
        values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
                #{userEmail,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{userInfo,jdbcType=LONGVARCHAR},
                #{headImg,jdbcType=LONGVARBINARY})
    </insert>
    <insert id="insertSelective" parameterType="com.wzt.mybatis.demo.model.UserWithBLOBs">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userPassword != null">
                user_password,
            </if>
            <if test="userEmail != null">
                user_email,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="userInfo != null">
                user_info,
            </if>
            <if test="headImg != null">
                head_img,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userEmail != null">
                #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userInfo != null">
                #{userInfo,jdbcType=LONGVARCHAR},
            </if>
            <if test="headImg != null">
                #{headImg,jdbcType=LONGVARBINARY},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.wzt.mybatis.demo.model.UserWithBLOBs">
        update sys_user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                user_password = #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userEmail != null">
                user_email = #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userInfo != null">
                user_info = #{userInfo,jdbcType=LONGVARCHAR},
            </if>
            <if test="headImg != null">
                head_img = #{headImg,jdbcType=LONGVARBINARY},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wzt.mybatis.demo.model.UserWithBLOBs">
        update sys_user
        set user_name     = #{userName,jdbcType=VARCHAR},
            user_password = #{userPassword,jdbcType=VARCHAR},
            user_email    = #{userEmail,jdbcType=VARCHAR},
            create_time   = #{createTime,jdbcType=TIMESTAMP},
            user_info     = #{userInfo,jdbcType=LONGVARCHAR},
            head_img      = #{headImg,jdbcType=LONGVARBINARY}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wzt.mybatis.demo.model.User">
        update sys_user
        set user_name     = #{userName,jdbcType=VARCHAR},
            user_password = #{userPassword,jdbcType=VARCHAR},
            user_email    = #{userEmail,jdbcType=VARCHAR},
            create_time   = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>